*** general ***

author   = Agrammon Group                 
date     = 2017-07-10
taxonomy = Application::Slurry
gui      = Application::Slurry,Hofdüngerausbringung::Gülle,Epandage::Lisier,Application::Slurry

+short

 Computes the annual NH3 emission from slurry
 application.

+description 

 This process computes the annual NH3 emission from slurry 
 application. The standard emission factor for slurry application is corrected 
 according to the TAN content and the application rate, the application 
 technology, the crops to which the manure is applied, soft measures applied 
 during application and the application season. 

 Since slurry is hardly incorporated in Switzerland, no correction for 
 incorporeation was made for slurry application. 


\subsubsection{References:}
Flisch R, Sinaj S, Charles R, Richner W 2009. Grundlagen für die die Düngung im Acker- und Futterbau. Agrarforschung 16(2).

 Frick R, Menzi H, Katz P 1996. Ammoniakverluste nach der
 Hofdüngeranwendung. FAT-Bericht Nr. 486.

Katz P E 1996. Dissertation: Ammoniakemissionen nach der Gülleanwendung auf 
 Grünland. Diss. ETH Nr. 11382. Dissertation. Eidgenössische Technische 
 Hochschule Zürich.

 Menzi H, Frick R, Kaufmann R 1997a. Ammoniak-Emissionen in der Schweiz: 
 Ausmass und technische Beurteilung des Reduktionspotentials. Eidgenössische 
 Forschungsanstalt für Agrarökologie und Landbau, Zürich-Reckenholz. 107pp. 

 Menzi H, Katz, PE, Fahrni M, Neftel A, Frick R 1998. A simple empirical model
  based on regression analysis to estimate ammonia emissions after manure
  application. Atmospheric Environment 32:301-307.

Sogaard H T, Sommer S G, Hutchings N J, Huijsmans J F M, Bussink D W, Nicholson F 2002. Ammonia volatilization from field-applied animal slurry - the ALFAM model. Atmospheric Environment 36: 3309-3319.

Sommer S G 2001b. Effect of coposting on nutrient loss and nitrogen availability of cattle deep litter. European Journal of Agronomy 14: 123-133.


*** input ***

*** technical ***

+er_App_cattle_liquid
  value = 0.5
  ++units 
    en = -
  ++description
    Emission rate for slurry application based on TAN of the slurry. The 
    average rate has been derived from Sommer (2001b), Sogaard et al. (2002), Menzi et al. (1998), Menzi et al. (1997a)
 
+er_App_pigs_liquid
  value = 0.35
  ++units 
    en = -
  ++description

   Die Emissionsrate wurde gemäss ALFAM Modell (Sogaard et al., 2002) berechnet mit folgenden Inputdaten: durchschnittliche Temperatur von März bis November: 12°C (Daten SMA Station Bern Liebefeld 1993-2002); Windgeschwindigkeit von 1 m/s:
Schweinegülle Mast: TAN Gehalt Gülle: 2.1 kg/m3 (Verdünnung 1:1, d.h. 2.5 % TS gemäss Flisch et al., 2009); ohne Korrekturen für emissionsminderende Ausbringung, ohne Einarbeitung nach Ausbringung; Ausbringungsmenge: 30 m3/ha; mikrometeorologische Messung: 30.3 % TAN (Mittelwert Boden feucht, Boden trocken). Bei gleichen Annahmen, jedoch einer reduzierten Ausbringungsmenge von 20 m3/ha (aufgrund des im Vergleich zu Rindergülle höheren TAN-Gehalts) und eines TS Gehalts von 3 % (höherer Strohanteil bei Labelsystemen): 33.2 %.
Unter den analogen Annahmen resultieren für Schweinegülle Zucht (TAN Gehalt Gülle: 1.65 kg/m3; Verdünnung 1:1, d.h. 2.5 % TS gemäss Flisch et al., 2009) Emissionsraten von 32.9 % bzw. 36.2 % TAN.

+er_App_fermented_slurry
  value = 0.53
  ++units
    en = -
  ++description
    Emission rate for fermented slurry based on TAN of the slurry.

+er_n2_App_liquid
  value = 0.0
  ++units 
    en = -
  ++description
    Emission rate for manure application. Not considerd relevant


+er_no_App_liquid
  value = 0.0055
  ++units 
    en = -
  ++description
    Emission rate for manure application. Stehfest, Bouwman 2006

+er_n2o_App_liquid
  value = 0.01
  ++units 
    en = -
  ++description
    Emission rate for manure application. ICCP 2006: v4_11Ch_11; Tab11.1

*** external ***

+::Livestock
+::Storage
+Slurry::Ctech
+Slurry::Applrate
+Slurry::Csoft
+Slurry::Cseason
+Slurry::Cfermented
+Slurry::Alfam2
?if !Kantonal_LU
  +Slurry::CfreeFactor
?endif

*** output ***


####################################################
#### liquid application old (incorrect) way

?if Single_old
  +pigs_share_n_out_livestock_liquid
    print = old      
    ++units 
      en = -
    ++description
      Pigs share of N flux out of livestock liquid manure
    ++formula
      return 0 unless scalar(Val(n_out_livestock_liquid, ::Livestock)) > 0;
      scalar(
        multiplyPairwise(
          Val(has_pigs, ::Livestock),
          Val(n_out_livestock_liquid, ::Livestock)
        )
      ) / scalar(Val(n_out_livestock_liquid, ::Livestock));

  +er_App_liquid
    print = old      
    ++units 
      en = -
    ++description
      Emission rate for slurry application based on TAN of the slurry. The 
      average rate has been derived from Sommer (2001b), Sogaard et al. (2002), Menzi et al (1998), Menzi et al. (1997a) and Sogaard et al. (2002)
    ++formula
      Out(pigs_share_n_out_livestock_liquid) * 
      Tech(er_App_pigs_liquid) + 
      (1 - Out(pigs_share_n_out_livestock_liquid)) * 
      Tech(er_App_cattle_liquid);
?endif

+nh3_napplication_slurry
  print = nh3,application,liquid,all
  ++units  
    en = kg N/year
    de = kg N/Jahr
    fr = kg N/an
  ++description
    Total annual NH3 emission from slurry application.
  ++formula
?if Single_old
    #### liquid application old incorrect way
    my $nh3_loss = scale( 
      Val(tan_into_application_liquid, ::Storage),
      #Val(c_tech, Slurry::Ctech) *
      Val(ef_alfam2, Slurry::Alfam2) *
      Val(c_soft, Slurry::Csoft) *
      Val(c_season, Slurry::Cseason) *
      (
        (1 - Val(share_fermented_slurry, Slurry::Cfermented)) *
        Out(er_App_liquid) +
        Val(share_fermented_slurry, Slurry::Cfermented) *
        Tech(er_App_fermented_slurry) + 
        Val(c_app, Slurry::Applrate)
      )
    );
?else
    #### liquid application correct way (implement and clean up as soon as permitted)
    my $nh3_loss = scale(
      # only pigs
      scale(
        multiplyPairwise(
          Val(has_pigs, ::Livestock),
          Val(tan_into_application_liquid, ::Storage)
        ),
        (1 - Val(share_fermented_slurry, Slurry::Cfermented)) *
        Tech(er_App_pigs_liquid)
      ) P+
      # only cattle
      scale(
        multiplyPairwise(
          Val(has_cattle, ::Livestock),
          Val(tan_into_application_liquid, ::Storage)
        ),
        (1 - Val(share_fermented_slurry, Slurry::Cfermented)) *
        Tech(er_App_cattle_liquid)
      ) P+    
      # both
      scale(
        Val(tan_into_application_liquid, ::Storage),
        Val(share_fermented_slurry, Slurry::Cfermented) *
        Tech(er_App_fermented_slurry) + 
        Val(c_app, Slurry::Applrate)
      ),
      # other factors affecting emission
      #Val(c_tech, Slurry::Ctech) *
      Val(ef_alfam2, Slurry::Alfam2) *
      Val(c_soft, Slurry::Csoft) *
      Val(c_season, Slurry::Cseason)
    );
?endif
?if Kantonal_LU
    $nh3_loss;
?else
    scale($nh3_loss,
      Val(c_free_factor_application, Slurry::CfreeFactor));
?endif

####################################################


####################################################

+ef_nh3_application_liquid_correct
  print = ef_nh3,application,liquid
  ++units  
    en = -
    de = -
    fr = -
  ++description
    NH3 Emission factor slurry application.
  ++formula
    Out(nh3_napplication_slurry) P/
      (
        Val(tan_into_application_liquid, ::Storage) P+
        add(
          sign(Val(tan_into_application_liquid, ::Storage)),
          -1
      )
    );

####################################################



####################################################
#### NxOx loss

+er_n2_napplication_liquid
  print = er_n2,application,liquid,all
  ++units  
    en = kg N/year
    de = kg N/Jahr
    fr = kg N/an
  ++description
    Total annual N2 emission from slurry application.
  ++formula
    scale( 
      Val(has_no_poultry, ::Livestock),
      Tech(er_n2_App_liquid)
    );

+er_no_napplication_liquid
  print = er_no,application,liquid,all
  ++units  
    en = kg N/year
    de = kg N/Jahr
    fr = kg N/an
  ++description
    Total annual NO emission from slurry application.
  ++formula
    scale( 
      Val(has_no_poultry, ::Livestock),
      Tech(er_no_App_liquid)
    );

+er_n2o_napplication_liquid
  print = er_n2o,application,liquid,all
  ++units  
    en = kg N/year
    de = kg N/Jahr
    fr = kg N/an
  ++description
    Total annual N2O emission from slurry application.
  ++formula
    scale( 
      Val(has_no_poultry, ::Livestock),
      Tech(er_n2o_App_liquid)
    );
    
####################################################
