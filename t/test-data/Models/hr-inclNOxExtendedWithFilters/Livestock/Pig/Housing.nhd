*** general ***

author   = Agrammon Group
date     = 2009-02-22
taxonomy = Livestock::Pig::Housing

+short

 Computes the annual NH3 emission from pig housing systems.

+description 

 This process calculates the NH3 emission in pig housing
 depending on the N excretion and the housing systems. The NH3 emission is assumed to be proportional to the total N excretion of the animals because the contaminated surfaces will primarily drive emissions, which will remain active even when animals are on the pasture or exercise yard.

  A proportional correction is applied according to the area per
  animal.

  A correction is applied if the part of the day grazing is above a
  defined grazing hours per days.

  \subsubsection{Definition of System boundaries for the housing Process:}

  For housing systems with integrated exercise yards, it is difficult to
  distinguish between emissions from housing, exercise yard and storage. 
  For these housingtypes the emission may be only validated for the sum of
  housing, exercise yard and storage emission.
  
*** input ***

*** external ***

+Excretion
+Grazing
+Housing::AirScrubber
+Housing::CFreeFactor
+Housing::KArea
+Housing::MitigationOptions
+Housing::Type

*** output ***

+n_into_housing
  print = Pig
  ++units
     en = kg N/year
     de = kg N/Jahr
     fr = kg N/an	
  ++description
    Annual N flux into the house.
  ++formula
    Val(n_excretion, Excretion) - Val(n_into_grazing, Grazing);

+tan_into_housing
  print = Pig
  ++units
     en = kg N/year
     de = kg N/Jahr
     fr = kg N/an	
  ++description
    Annual N flux as TAN into the house.
  ++formula
    Val(tan_excretion, Excretion) - Val(tan_into_grazing, Grazing);

+ef_housing_indoor_before_air_scrubber
  print = Pig
  ++units
     en = -
     de = -
     fr = - 
  ++description
    NH3 emission factor for indoor part without air scrubber removal of other pig housing systems.
  ++formula
    my $ef = Val(er_housing, Housing::Type) * 
              Val(c_free_factor_housing, Housing::CFreeFactor) *
              Val(c_area, Housing::KArea) *
              (1 - Val(red_housing_floor, Housing::MitigationOptions)) * 
              (1 - Val(red_housing_air, Housing::MitigationOptions));
    #FIXME: Add message if $ef > 1?
    $ef = 1 unless $ef < 1;
    return $ef;

+ef_housing_indoor
  print = Pig
  ++units
     en = -
     de = -
     fr = - 
  ++description
    NH3 emission factor for indoor part of other pig housing systems.
  ++formula
    Out(ef_housing_indoor_before_air_scrubber) *
    (1 - Val(red_air_scrubber, Housing::AirScrubber));

+ef_housing_outdoor
  print = Pig
  ++units
     en = -
     de = -
     fr = - 
  ++description
    NH3 emission factor for outdoor part of other pig housing systems.
  ++formula
    my $ef = Val(er_housing, Housing::Type) * 
              Val(c_free_factor_housing, Housing::CFreeFactor) *
              Val(c_area, Housing::KArea);
    #FIXME: Add message if $ef > 1?
    $ef = 1 unless $ef < 1;
    return $ef;

+ef_nh3_nhousing
  print = Pig,ef_nh3
  ++units
     en = -
     de = -
     fr = - 
  ++description
    NH3 emission factor for other pig housing systems.
  ++formula
    # indoor part
    Val(share_indoor, Housing::Type) * Out(ef_housing_indoor) +
    # outdoor part
    (1 - Val(share_indoor, Housing::Type)) * Out(ef_housing_outdoor);

+nh3_nhousing
  print = Pig
  ++units
     en = kg N/year
     de = kg N/Jahr
     fr = kg N/an	
  ++description
    Annual NH3 emission from pig housing systems.
  ++formula
    # change effect of certain mitigation strategies on indoor/outdoor emissions? -> check with Thomas
    Out(tan_into_housing) * Out(ef_nh3_nhousing);

+n_air_scrubber
  print = Pig
  ++units
     en = kg N/year
     de = kg N/Jahr
     fr = kg N/an 
  ++description
    Annual N of NH3 emission remaining in air scrubber from pig housing systems.
  ++formula
    # reduction efficiency of air scrubber
    Val(red_air_scrubber, Housing::AirScrubber) *
    # multiplied with indoor loss before air scrubber removal
    Val(tan_excretion,Excretion) * Out(ef_housing_indoor_before_air_scrubber);  

+n_outhousing
  print = Pig
  ++units
     en = kg N/year
     de = kg N/Jahr
     fr = kg N/an	
  ++description
    Annual N flux out of the housing including N remained in biotrickling filter.
  ++formula
     if(Val(housing_type, Housing::Type) eq 'Outdoor'){
        0
     }else {
     	   if(Val(air_scrubber, Housing::AirScrubber) eq 'biotrickling'){
	   Out(n_into_housing) - Out(nh3_nhousing) - Out(n_air_scrubber)
     	   }else{
	   Out(n_into_housing) - Out(nh3_nhousing)
	   };
     };

+tan_outhousing
  print = Pig
  ++units
     en = kg N/year
     de = kg N/Jahr
     fr = kg N/an	
  ++description
    Annual N flux as TAN out of the housing indcluding N remained in biotrickling filter.
    (without remains from acid filter)
  ++formula
    if(Val(housing_type, Housing::Type) eq 'Outdoor'){
        0
    }else {
     	   if(Val(air_scrubber, Housing::AirScrubber) eq 'biotrickling'){
	   Out(tan_into_housing) - Out(nh3_nhousing) - Out(n_air_scrubber)
     	   }else{
    	   Out(tan_into_housing) - Out(nh3_nhousing)
	   };
    };

+share_tan_out
  print = Pig
  ++units  
    en = -
  ++description 
    Share of TAN for interface to storage, the same share is assumed for 
    solid and liquid parts of output. Mineralization and immobilization
    are considerd in the storage module.
  ++formula
    if(  Out(n_outhousing) != 0 ){
 	Out(tan_outhousing) / Out(n_outhousing)
    }else{0};

+n_outhousing_liquid
  print = Pig
  ++units
     en = kg N/year
     de = kg N/Jahr
     fr = kg N/an	
  ++description
    Annual N flux out of housing, slurry or liquid fraction from pigs. 
  ++formula
    if(Val(housing_type, Housing::Type) eq 'Outdoor'){
       0
    }else {
       Out(n_outhousing) * Val(share_liquid, Housing::Type)
    };

+tan_outhousing_liquid
  print = Pig
  ++units
     en = kg N/year
     de = kg N/Jahr
     fr = kg N/an	
  ++description
    Annual N flux as TAN out of housing, slurry or liquid fraction from pigs. 
  ++formula
    if(Val(housing_type, Housing::Type) eq 'Outdoor'){
       0
    }else {
       Out(n_outhousing) * Val(share_liquid, Housing::Type) * Out(share_tan_out)
    };

+n_outhousing_solid
  print = Pig
  ++units
     en = kg N/year
     de = kg N/Jahr
     fr = kg N/an	
  ++description
    Annual N flux out of housing, manure fraction of N flux from pigs.
  ++formula
    if(Val(housing_type, Housing::Type) eq 'Outdoor'){
       0
    }else {
       Out(n_outhousing) * ( 1 - Val(share_liquid, Housing::Type) )
    };

+tan_outhousing_solid
  print = Pig
  ++units
     en = kg N/year
     de = kg N/Jahr
     fr = kg N/an	
  ++description
    Annual N flux as TAN out of housing, manure fraction of N flux from pigs.  
  ++formula
   if(Val(housing_type, Housing::Type) eq 'Outdoor'){
        0
    }else {
        Out(n_outhousing) * ( 1 - Val(share_liquid, Housing::Type) ) * Out(share_tan_out)
   };
 
