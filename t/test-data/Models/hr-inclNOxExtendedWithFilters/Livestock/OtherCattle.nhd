# äöü
*** general ***
author    = Agrammon Group
date      = 2017-07-12
taxonomy  = Livestock::OtherCattle
instances = multi
gui       = Livestock::OtherCattle,Tierhaltung::Übriges Rindvieh,Production animale::Autres bovins,Livestock::Other cattle

+short
  Collects the annual emission of NH3 and the N flux for cattle 
 (apart from dairy cows).

+description 
  This process summarizes the annual emission of NH3 for cattle (apart from dairy cows) 
  from housing, yard and grazing. Further it summarizes the annual N flux from housing and yard to the storage for cattle.

*** input ***

*** technical ***

+er_n2_solid_Slurry
  value = 0.0
  ++units
    en = -
  ++description
     Emission rate for N2 based on Ntot

+er_n2_solid_Slurry_Plus_Solid_Manure
  value = 0.025
  ++units
    en = -
  ++description
     Emission rate for N2 based on Ntot

+er_n2_solid_Solid
  value = 0.05
  ++units
    en = -
  ++description
     Emission rate for N2 based on Ntot

+er_n2_liquid_Slurry
  value = 0.02
  ++units
    en = -
  ++description
     Emission rate for N2 based on Ntot

+er_n2_liquid_Slurry_Plus_Solid_Manure
  value = 0.02
  ++units
    en = -
  ++description
     Emission rate for N2 based on Ntot

+er_n2_liquid_Solid
  value = 0.0
  ++units
    en = -
  ++description
     Emission rate for N2 based on Ntot



+er_no_solid_Slurry
  value = 0.0
  ++units
    en = -
  ++description
     Emission rate for N2 based on Ntot

+er_no_solid_Slurry_Plus_Solid_Manure
  value = 0.025
  ++units
    en = -
  ++description
     Emission rate for N2 based on Ntot

+er_no_solid_Solid
  value = 0.05
  ++units
    en = -
  ++description
     Emission rate for N2 based on Ntot

+er_no_liquid_Slurry
  value = 0.002
  ++units
    en = -
  ++description
     Emission rate for N2 based on Ntot

+er_no_liquid_Slurry_Plus_Solid_Manure
  value = 0.002
  ++units
    en = -
  ++description
     Emission rate for N2 based on Ntot

+er_no_liquid_Solid
  value = 0.0
  ++units
    en = -
  ++description
     Emission rate for N2 based on Ntot




+er_n2o_solid_Slurry
  value = 0.0
  ++units
    en = -
  ++description
     Emission rate for N2 based on Ntot

+er_n2o_solid_Slurry_Plus_Solid_Manure
  value = 0.025
  ++units
    en = -
  ++description
     Emission rate for N2 based on Ntot

+er_n2o_solid_Solid
  value = 0.05
  ++units
    en = -
  ++description
     Emission rate for N2 based on Ntot

+er_n2o_liquid_Slurry
  value = 0.02
  ++units
    en = -
  ++description
     Emission rate for N2 based on Ntot

+er_n2o_liquid_Slurry_Plus_Solid_Manure
  value = 0.02
  ++units
    en = -
  ++description
     Emission rate for N2 based on Ntot

+er_n2o_liquid_Solid
  value = 0.0
  ++units
    en = -
  ++description
     Emission rate for N2 based on Ntot

*** external ***

+OtherCattle::Excretion
+OtherCattle::Housing::Type
+OtherCattle::Housing::KArea
+OtherCattle::Housing
+OtherCattle::Yard
+OtherCattle::Grazing


*** output ***

+dimensioning_check
  print = OtherCattle
  ++units 
    en = -
  ++description
   Check if number of animals <= number of animal places.
  ++formula
    if (  Val(dimensioning_barn, OtherCattle::Housing::KArea) < Val(animals, OtherCattle::Excretion) ) {
      writeLog({
        en => "The number of available animal places must be equal or higher than the number of animals.",
        de => "Anzahl Tierplätze muss grösser oder gleich der Anzahl der Tiere sein.",
        fr => "Le nombre de places dans l'étable doit être au moins égal au nombre d'animaux."
      });
      return "not ok";
    } 
    else {
      return "ok";
    }

########### Other Voltaile N Flux


+er_n2_nsolid
  print = OtherCattle
  ++units
      en = -
  ++description
    Annual N2 emissions from cattles housing, yard and grazing (production).
  ++formula
     given ( Val(housing_type, OtherCattle::Housing::Type) ) {
            return Tech(er_n2_solid_Slurry)                    when 'Tied_Housing_Slurry';
            return Tech(er_n2_solid_Slurry_Plus_Solid_Manure)  when 'Tied_Housing_Slurry_Plus_Solid_Manure';
            return Tech(er_n2_solid_Slurry)                    when 'Loose_Housing_Slurry';
            return Tech(er_n2_solid_Slurry_Plus_Solid_Manure)  when 'Loose_Housing_Slurry_Plus_Solid_Manure';
            return Tech(er_n2_solid_Solid)                     when 'Loose_Housing_Deep_Litter';
            default { return 0; }
      };

+er_no_nsolid
  print = OtherCattle
  ++units
      en = -
  ++description
    Annual N2 emissions from cattles housing, yard and grazing (production).
  ++formula
     given ( Val(housing_type, OtherCattle::Housing::Type) ) {
            return Tech(er_no_solid_Slurry)                    when 'Tied_Housing_Slurry';
            return Tech(er_no_solid_Slurry_Plus_Solid_Manure)  when 'Tied_Housing_Slurry_Plus_Solid_Manure';
            return Tech(er_no_solid_Slurry)                    when 'Loose_Housing_Slurry';
            return Tech(er_no_solid_Slurry_Plus_Solid_Manure)  when 'Loose_Housing_Slurry_Plus_Solid_Manure';
            return Tech(er_no_solid_Solid)                     when 'Loose_Housing_Deep_Litter';
            default { return 0; }
      };

+er_n2o_nsolid
  print = OtherCattle
  ++units
      en = -
  ++description
    Annual N2 emissions from cattles housing, yard and grazing (production).
  ++formula
     given ( Val(housing_type, OtherCattle::Housing::Type) ) {
            return Tech(er_n2o_solid_Slurry)                    when 'Tied_Housing_Slurry';
            return Tech(er_n2o_solid_Slurry_Plus_Solid_Manure)  when 'Tied_Housing_Slurry_Plus_Solid_Manure';
            return Tech(er_n2o_solid_Slurry)                    when 'Loose_Housing_Slurry';
            return Tech(er_n2o_solid_Slurry_Plus_Solid_Manure)  when 'Loose_Housing_Slurry_Plus_Solid_Manure';
            return Tech(er_n2o_solid_Solid)                     when 'Loose_Housing_Deep_Litter';
            default { return 0; }
      };

+er_n2_nliquid
  print = OtherCattle
  ++units
      en = -
  ++description
    Annual N2 emissions from cattles housing, yard and grazing (production).
  ++formula
     given ( Val(housing_type, OtherCattle::Housing::Type) ) {
            return Tech(er_n2_liquid_Slurry)                    when 'Tied_Housing_Slurry';
            return Tech(er_n2_liquid_Slurry_Plus_Solid_Manure)  when 'Tied_Housing_Slurry_Plus_Solid_Manure';
            return Tech(er_n2_liquid_Slurry)                    when 'Loose_Housing_Slurry';
            return Tech(er_n2_liquid_Slurry_Plus_Solid_Manure)  when 'Loose_Housing_Slurry_Plus_Solid_Manure';
            return Tech(er_n2_liquid_Solid)                     when 'Loose_Housing_Deep_Litter';
            default { return 0; }
      };

+er_no_nliquid
  print = OtherCattle
  ++units
      en = -
  ++description
    Annual N2 emissions from cattles housing, yard and grazing (production).
  ++formula
     given ( Val(housing_type, OtherCattle::Housing::Type) ) {
            return Tech(er_no_liquid_Slurry)                    when 'Tied_Housing_Slurry';
            return Tech(er_no_liquid_Slurry_Plus_Solid_Manure)  when 'Tied_Housing_Slurry_Plus_Solid_Manure';
            return Tech(er_no_liquid_Slurry)                    when 'Loose_Housing_Slurry';
            return Tech(er_no_liquid_Slurry_Plus_Solid_Manure)  when 'Loose_Housing_Slurry_Plus_Solid_Manure';
            return Tech(er_no_liquid_Solid)                     when 'Loose_Housing_Deep_Litter';
            default { return 0; }
      };

+er_n2o_nliquid
  print = OtherCattle
  ++units
      en = -
  ++description
    Annual N2 emissions from cattles housing, yard and grazing (production).
  ++formula
     given ( Val(housing_type, OtherCattle::Housing::Type) ) {
            return Tech(er_n2o_liquid_Slurry)                    when 'Tied_Housing_Slurry';
            return Tech(er_n2o_liquid_Slurry_Plus_Solid_Manure)  when 'Tied_Housing_Slurry_Plus_Solid_Manure';
            return Tech(er_n2o_liquid_Slurry)                    when 'Loose_Housing_Slurry';
            return Tech(er_n2o_liquid_Slurry_Plus_Solid_Manure)  when 'Loose_Housing_Slurry_Plus_Solid_Manure';
            return Tech(er_n2o_liquid_Solid)                     when 'Loose_Housing_Deep_Litter';
            default { return 0; }
      };


+n2_nsolid
  print = OtherCattle
  ++labels
     en = housing, yard and storage cattle N2-emissions
        de = Weide, Stall und Laufhof Übriges Rindvieh N2-Emission
        fr = Autres bovins Emissions de N2 pâturage, l'étable et parcours extérieur
  ++units
    en = kg N/year
    de = kg N/Jahr
    fr = kg N/an
  ++description
    Annual N2 emission from cattle housing, yard and grazing (production).
  ++formula
     ( Val(n_into_housing, OtherCattle::Housing) * (1-Val(share_liquid, OtherCattle::Housing::Type) ) 
     ) * Out(er_n2_nsolid);

+no_nsolid
  print = OtherCattle
  ++units  
    en = kg N/year
    de = kg N/Jahr
    fr = kg N/an
  ++description
    Annual NO emission from cattle housing, yard and grazing (production).
  ++formula
     ( Val(n_into_housing, OtherCattle::Housing) * (1-Val(share_liquid, OtherCattle::Housing::Type) ) 
     ) * Out(er_no_nsolid);

+n2o_nsolid
  print = OtherCattle  print = OtherCattle
  ++labels
    en = housing, yard and storage cattle N2O-emissions
    de = Stall, Laufhof und Lager andere Rinder N2O-Emission
    fr = Autres bovins Emissions de N2O pâturage, l'étable et parcours extérieur
  ++units  
    en = kg N/year
    de = kg N/Jahr
    fr = kg N/an
  ++description
    Annual N2o emission from cattle housing, yard and grazing (production).
  ++formula
     ( Val(n_into_housing, OtherCattle::Housing) * (1-Val(share_liquid, OtherCattle::Housing::Type) ) 
     ) * Out(er_n2o_nsolid);

+n2_nliquid
  print = OtherCattle
  ++labels
     en = housing, yard and storage cattle N2-emissions
        de = Weide, Stall und Laufhof Übriges Rindvieh N2-Emission
        fr = Autres bovins Emissions de N2 pâturage, l'étable et parcours extérieur
  ++units
    en = kg N/year
    de = kg N/Jahr
    fr = kg N/an
  ++description
    Annual N2 emission from cattle housing, yard and grazing (production).
  ++formula
     ( Val(n_into_housing, OtherCattle::Housing) * Val(share_liquid, OtherCattle::Housing::Type)  +
       Val(n_into_yard, OtherCattle::Yard)
     ) * Out(er_n2_nliquid);

+no_nliquid
  print = OtherCattle
  ++labels
    en = housing, yard and storage cattle NO-emissions
        de = Weide, Stall und Laufhof Rinder NO-Emission
        fr = Autres bovins Emissions de NO pâturage, l'étable et parcours extérieur
  ++units
    en = kg N/year
    de = kg N/Jahr
    fr = kg N/an
  ++description
    Annual NO emission from cattle housing, yard and grazing (production).
  ++formula
     ( Val(n_into_housing, OtherCattle::Housing) * Val(share_liquid, OtherCattle::Housing::Type)  +
       Val(n_into_yard, OtherCattle::Yard)
     ) * Out(er_no_nliquid); 

+n2o_nliquid
  print = OtherCattle
  ++labels
    en = housing, yard and storage cattle N2O-emissions
    de = Weide, Stall und Laufhof Rinder N2O-Emission
    fr = Autres bovins Emissions de N2O pâturage, l'étable et parcours extérieur
  ++units
    en = kg N/year
    de = kg N/Jahr
    fr = kg N/an
  ++description
    Annual N2o emission from cattle housing, yard and grazing (production).
  ++formula
     ( Val(n_into_housing, OtherCattle::Housing) * Val(share_liquid, OtherCattle::Housing::Type)  +
       Val(n_into_yard, OtherCattle::Yard)
     ) *  Out(er_n2o_nliquid);
