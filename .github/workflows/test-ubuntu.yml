name: All Tests

on:
  push:
    paths-ignore:
    - '**.md'
  pull_request:
    paths-ignore:
    - '**.md'

env:
  TMPDIR_PATH: /tmp
  POSTGRES_USER: postgres
  POSTGRES_HOST: localhost
  RAKU_VERSION: 2020.01

jobs:

  build:

    strategy:
        matrix:
            os:
                - ubuntu-16.04
                # - windows-latest

            raku:
                - '2020.01'

        fail-fast: false

    name: Raku ${{ matrix.raku }} on ${{ matrix.os }}

    runs-on: ${{ matrix.os }}

    # The service containers will uses host port binding instead of container
    # networking so you access them via localhost rather than the service name
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_DB: postgres
        ports:
        # will assign a random free host port
        - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout
      uses: actions/checkout@v1     

    - name: Create Agrammon DB
      run: psql -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER -c 'create database agrammon_test' && \
           psql -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER --dbname=agrammon_test -c 'create extension pgcrypto'
      env:
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port

    - name: Raku cache
      id: raku-cache
      uses: actions/cache@v1
      with:
          path: /opt/rakudo-pkg
          key: ${{ matrix.os }}-raku-${{ matrix.raku}}-${{ hashFiles('/opt/rakudo-pkg/include/moar/config.h') }}

    - name: Install Raku-$${ matrix.raku }}
      if: steps.raku-cache.outputs.cache-hit != 'true'
      run: cd ${TMPDIR} \
           && wget -O rakudo-pkg.deb ${RAKUDO_PKG_URL} \
           && sudo dpkg -i rakudo-pkg.deb \
           /opt/rakudo-pkg/bin/raku -v
      env:
          RAKUDO_PKG_URL: https://github.com/nxadm/rakudo-pkg/releases/download/v${{ matrix.raku}}-01/rakudo-pkg-Ubuntu16.04_${{ matrix.raku }}-01_amd64.deb

# https://github.com/nxadm/rakudo-pkg/releases/download/v2019.11/rakudo-pkg-Ubuntu16.04_2019.11-01_amd64.deb
# https://github.com/nxadm/rakudo-pkg/releases/download/v2020.01/rakudo-pkg-Ubuntu16.04_2020.01-01_amd64.deb
# cd ${TMPDIR}
# wget -O rakudo-pkg.deb ${RAKUDO_PKG_URL}
# sudo dpkg -i rakudo-pkg.deb
#  - cd ${TRAVIS_BUILD_DIR}
#  - export PATH=$PATH:~/.perl6/bin:/opt/rakudo-pkg/bin
#  - /opt/rakudo-pkg/bin/install-zef-as-user

#    - name: Update keys
#      if: steps.raku-cache.outputs.cache-hit != 'true'
#      run: sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 379CE192D401AB61
#    - name: Update source list
#      if: steps.raku-cache.outputs.cache-hit != 'true'
#      run: echo "deb https://dl.bintray.com/nxadm/rakudo-pkg-debs `lsb_release -cs` main" | sudo tee -a /etc/apt/sources.list.d/rakudo-pkg.list
#    - name: Install Raku
#      if: steps.raku-cache.outputs.cache-hit != 'true'
#      run: sudo apt-get update && sudo apt-get install rakudo-pkg

    # don't depend on PATH setting
    - name: Fix zef
      if: steps.raku-cache.outputs.cache-hit != 'true'
      run: sudo sed -i -e 's|/usr/bin/env perl6|/opt/rakudo-pkg/bin/raku|' /opt/rakudo-pkg/bin/zef && cat /opt/rakudo-pkg/bin/zef

    - name: Agrammon module cache
      id: agrammon-cache
      uses: actions/cache@v1
      with:
          path: /home/runner/.raku
          key: ${{ matrix.os }}-agrammon-${{ matrix.raku}}-${{ hashFiles('META6.json') }}

    - name: zef store cache
      id: zef-cache
      uses: actions/cache@v1
      with:
          path: /home/runner/.zef/store
          key: ${{ matrix.os }}-zef-${{ matrix.raku}}-${{ hashFiles('META6.json') }}

    - name: Install Raku modules
      if: steps.agrammon-cache.outputs.cache-hit != 'true' && steps.zef-cache.outputs.cache-hit != 'true'
      run: /opt/rakudo-pkg/bin/zef --debug --/test --deps-only --install-to=/home/runner/.raku install .

    - name: Raku install dir
      run: /opt/rakudo-pkg/bin/zef locate DB::Pg

    - name: Run tests
      run: /usr/bin/prove -v -r --exec=/opt/rakudo-pkg/bin/raku xt/ t/
      env:
          PERL6LIB: lib
          POSTGRES_HOST: localhost
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
