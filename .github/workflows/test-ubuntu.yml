on: [push]
jobs:
  container-job:
    runs-on: alpine-latest
    
    # runs all of the steps inside the specified container rather than on the VM host.  
    # Because of this the network configuration changes from host based network to a container network.
    container:
      image:  node:10.16-jessie

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Run tests
      id: tests
      uses: JJ/raku-container-action@master
#      working-directory: ./postgres
      env:
        # use postgres for the host here because we have specified a container for the job.
        # If we were running the job on the VM this would be localhost
        POSTGRES_HOST: postgres
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
    - name Install packages
    

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     name: Test Agrammon6
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v1
#     - name: Run tests
#       id: tests
#       uses: JJ/raku-container-action@master
